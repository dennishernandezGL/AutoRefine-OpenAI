name: Deploy to ECS

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: us-east-2
  ECS_CLUSTER: homely-turtle-71tzpr
  ECS_SERVICE: WebApi-EC2-service-4q3iws5g
  ECS_TASK_FAMILY: WebApi-EC2
  DOCKER_IMAGE: dperezro/glwebapi

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Services/Dockerfile
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Register new ECS task definition with updated image
        id: register_task
        run: |
          IMAGE="${{ env.DOCKER_IMAGE }}:${{ github.sha }}"
          TASK_DEF=$(aws ecs describe-task-definition --task-definition ${{ env.ECS_TASK_FAMILY }})
          NEW_CONTAINER_DEFS=$(echo $TASK_DEF | jq --arg IMAGE "$IMAGE" '.taskDefinition.containerDefinitions | map(.image = $IMAGE)')
          aws ecs register-task-definition \
            --family ${{ env.ECS_TASK_FAMILY }} \
            --container-definitions "$NEW_CONTAINER_DEFS" \
            --requires-compatibilities EC2 \
            --cpu "1024" \
            --memory "3072" \
            --network-mode bridge > new-task-def.json
          TASK_DEF_ARN=$(cat new-task-def.json | jq -r '.taskDefinition.taskDefinitionArn')
          echo "TASK_DEF_ARN=$TASK_DEF_ARN" >> $GITHUB_ENV

      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ env.ECS_CLUSTER }} \
            --service ${{ env.ECS_SERVICE }} \
            --task-definition ${{ env.TASK_DEF_ARN }}