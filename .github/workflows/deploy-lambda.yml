name: Deploy .NET CDK + Lambda

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      LAMBDA_PATH: OpenAILambda/bin/Release/net6.0/publish

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install AWS CDK CLI
        run: npm install -g aws-cdk@latest

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.x'

      - name: Restore & Publish Lambda
        run: |
          dotnet restore OpenAILambda/src/OpenAILambda/OpenAILambda.csproj
          dotnet publish OpenAILambda/src/OpenAILambda/OpenAILambda.csproj \
            -c Release \
            -o ${{ github.workspace }}/${{ env.LAMBDA_PATH }} \
            /p:PublishReadyToRun=false
          
      - name: Restore & Publish Web API
        run: |
          dotnet restore Services/src/WebApi/WebApi.csproj
          dotnet publish Services/src/WebApi/WebApi.csproj \
            -c Release \
            -o ${{ github.workspace }}/Services/bin/Release/net6.0/publish    

      - name: Verify Lambda output directory
        run: |
          echo "Lambda publish directory: ${{ github.workspace }}/${{ env.LAMBDA_PATH }}"
          ls -la ${{ github.workspace }}/${{ env.LAMBDA_PATH }}
          echo "Lambda output directory verified"

      - name: Restore & Build CDK app
        working-directory: Infra
        run: |
          dotnet restore
          dotnet build --configuration Release

      - name: Update InfraStack with correct path
        run: |
          echo "LAMBDA_FULLPATH=${{ github.workspace }}/${{ env.LAMBDA_PATH }}" >> $GITHUB_ENV
          # Actualizar el path en InfraStack.cs si es necesario con sed
          # Este es un ejemplo; ajusta seg√∫n sea necesario
          # sed -i "s|Path.Combine(.*publish.*)|\"${{ github.workspace }}/${{ env.LAMBDA_PATH }}\"|g" Infra/InfraStack.cs

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: CDK Bootstrap
        working-directory: Infra
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          cdk bootstrap aws://$ACCOUNT_ID/$AWS_REGION --require-approval never

      - name: CDK Synth
        working-directory: Infra
        run: |
          cdk synth --app "dotnet run -c Release --no-build" || (echo "CDK synth failed"; exit 1)

      - name: CDK Deploy
        working-directory: Infra
        run: |
          cdk deploy InfraStack --app "dotnet run -c Release --no-build" --require-approval never
          
      - name: CDK Deploy EC2 Stack
        working-directory: Infra
        run: |
          cdk deploy WebApiStack \
            --app "dotnet run -c Release --no-build" \
            --require-approval never    